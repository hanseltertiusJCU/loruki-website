/* Utilities */
.container {
    /** 
        specify maximum width, 
        if the actual width > the specified maximum width -> 
        the actual width will be the specified maximum width
    */
    max-width: 1100px;
    margin: 0 auto;
    overflow: auto;
    padding: 0 40px;
}

.card {
    background-color: #fff;
    color: #333;
    border-radius: 10px;
    /** 
        implement shadow on the container 

        literally the value is :
        horizontal vertical blur color;
    */
    box-shadow: 0 3px 10px rgba(0, 0, 0, 0.2);
    padding: 20px;
    margin: 10px;
}

.btn {
    /* the button will align horizontally but we can specify dimension */
    display: inline-block;
    padding: 10px 30px;
    cursor: pointer;
    background: var(--primary-color);
    color: #fff;
    border: none;
    border-radius: 5px;
}

.btn-outline {
    background-color: transparent;
    /* refers to : size color border-style */
    border: 1px #fff solid;
}

.btn:hover {
    /* to scale the element */
    transform: scale(.98);
}

/* Backgrounds & colored buttons */
.bg-primary,
.btn-primary {
    background-color: var(--primary-color);
    color: #fff;
}

.bg-secondary,
.btn-secondary {
    background-color: var(--secondary-color);
    color: #fff;
}

.bg-dark,
.btn-dark {
    background-color: var(--dark-color);
    color: #fff;
}

.bg-light,
.btn-light {
    background-color: var(--light-color);
    color: #333;
}

.bg-primary a,
.btn-primary a,
.bg-secondary a,
.btn-secondary a,
.bg-dark a,
.btn-dark a {
    color: #fff;
}

/* Text colors */
.text-primary {
    color: var(--primary-color);
}

.text-secondary {
    color: var(--secondary-color);
}

.text-dark {
    color: var(--dark-color);
}

.text-light {
    color: var(--light-color);
}

/* Text sizes */
.lead {
    font-size: 20px;
}

.sm {
    font-size: 1rem;
}

.md {
    font-size: 2rem;
}

.lg {
    font-size: 3rem;
}

.xl {
    font-size: 4rem;
}

.text-center {
    text-align: center;
}

/* Alert */
.alert {
    background-color: var(--light-color);
    padding: 10px 20px;
    font-weight: bold;
    margin: 15px 0;
}

.alert i {
    margin-right: 10px;
}

.alert-success {
    background-color: var(--success-color);
    color: #fff;
}

.alert-error {
    background-color: var(--error-color);
    color: #fff;
}

.flex {
    display: flex;
    /* align on the main axis (towards the direction) */
    justify-content: center;
    /* align on the cross axis (opposite from the direction) */
    align-items: center;
    height: 100%;
}

.grid {
    display: grid;
    /** 
        we need to define the value of this 
        attribute so that it will apply grid style, 
        unlike flexbox 

        fr is the attribute for the css grid column,
        which specifies fraction

        repeat() is the method to define the same value
        multiple times
    */
    grid-template-columns: repeat(2, 1fr);
    /* gap is used to give margin between grid items */
    gap: 20px;
    /* grid can still use justify-content and align-items */
    justify-content: center;
    align-items: center;
    height: 100%;
}

.grid-3 {
    grid-template-columns: repeat(3, 1fr);
}

/* Margin */
.my-1 {
    /* rem to px = value * font-size of the root eleemnt (default : 16px) */
    margin: 1rem 0;
}

.my-2 {
    /* rem to px = value * font-size of the root eleemnt (default : 16px) */
    margin: 1.5rem 0;
}

.my-3 {
    /* rem to px = value * font-size of the root eleemnt (default : 16px) */
    margin: 2rem 0;
}

.my-4 {
    /* rem to px = value * font-size of the root eleemnt (default : 16px) */
    margin: 3rem 0;
}

.my-5 {
    /* rem to px = value * font-size of the root eleemnt (default : 16px) */
    margin: 4rem 0;
}

.m-1 {
    /* rem to px = value * font-size of the root eleemnt (default : 16px) */
    margin: 1rem;
}

.m-2 {
    /* rem to px = value * font-size of the root eleemnt (default : 16px) */
    margin: 1.5rem;
}

.m-3 {
    /* rem to px = value * font-size of the root eleemnt (default : 16px) */
    margin: 2rem;
}

.m-4 {
    /* rem to px = value * font-size of the root eleemnt (default : 16px) */
    margin: 3rem;
}

.m-5 {
    /* rem to px = value * font-size of the root eleemnt (default : 16px) */
    margin: 4rem;
}

/* Padding */
.py-1 {
    /* rem to px = value * font-size of the root eleemnt (default : 16px) */
    padding: 1rem 0;
}

.py-2 {
    /* rem to px = value * font-size of the root eleemnt (default : 16px) */
    padding: 1.5rem 0;
}

.py-3 {
    /* rem to px = value * font-size of the root eleemnt (default : 16px) */
    padding: 2rem 0;
}

.py-4 {
    /* rem to px = value * font-size of the root eleemnt (default : 16px) */
    padding: 3rem 0;
}

.py-5 {
    /* rem to px = value * font-size of the root eleemnt (default : 16px) */
    padding: 4rem 0;
}

.p-1 {
    /* rem to px = value * font-size of the root eleemnt (default : 16px) */
    padding: 1rem;
}

.p-2 {
    /* rem to px = value * font-size of the root eleemnt (default : 16px) */
    padding: 1.5rem;
}

.p-3 {
    /* rem to px = value * font-size of the root eleemnt (default : 16px) */
    padding: 2rem;
}

.p-4 {
    /* rem to px = value * font-size of the root eleemnt (default : 16px) */
    padding: 3rem;
}

.p-5 {
    /* rem to px = value * font-size of the root eleemnt (default : 16px) */
    padding: 4rem;
}